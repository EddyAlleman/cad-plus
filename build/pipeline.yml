trigger:
  branches:
    include:
    - master
    - dev

name: '$(Date:yyyyMMdd).$(Rev:r)[$(BuildID)]'

stages:

- stage: 'Build'
    
  variables:
  - group: build-vars
  - name: previewVersion #filled in get-version template
    value: 0.0.0.0
  - name: prodVersion #filled in get-version template
    value: 0.0.0.0
  - name: previewVersionName #filled in get-version template
    value: ''
  - name: isProd
    value: ${{eq(variables['Build.SourceBranch'], 'refs/heads/master')}}
  jobs:
  - job: BuildUnitTestInstaller
    displayName: 'Build, Unit Test, Installer'
    pool:
      name: 'Azure Pipelines'
      vmImage: windows-latest
      demands:
        - msbuild
        - visualstudio
    
    steps:

    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet'

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'cad-plus.sln'

    - template: templates/get-version.yml
      parameters:
        versionFile: 'version.json'

    - template: templates/compile-binaries.yml
      parameters:
        version: '$(previewVersion)'
  
    - task: VSTest@2
      displayName: 'Unit test'
      inputs:
        testAssemblyVer2: |
          tests\_build\*.Tests.dll
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'installer\Installer.sln'

    - template: templates/compile-installer.yml
      parameters:
        version: '$(previewVersion)'
        packageSuffix: ' ($(previewVersionName))'
        artifactName: preview

    # compile production if required
    - ${{ if and(eq(variables['isProd'], true), ne(variables['Build.Reason'], 'PullRequest')) }}:
      - task: DeleteFiles@1
        inputs:
          SourceFolder: '_build'
          Contents: '*.*'
          RemoveSourceFolder: true
    
    - ${{ if and(eq(variables['isProd'], true), ne(variables['Build.Reason'], 'PullRequest')) }}:
      - template: templates/compile-binaries.yml
        parameters:
          version: '$(prodVersion)'

    - ${{ if and(eq(variables['isProd'], true), ne(variables['Build.Reason'], 'PullRequest')) }}:
      - template: templates/compile-installer.yml
        parameters:
          version: '$(prodVersion)'
          artifactName: prod

    # add version file and publish artifact
    - task: CopyFiles@2
      condition: ne(variables['Build.Reason'], 'PullRequest')
      displayName: 'Copy Version File'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'version.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/installer'
    
    - publish: '$(Build.ArtifactStagingDirectory)/installer'
      condition: ne(variables['Build.Reason'], 'PullRequest')
      artifact: 'installer'

- stage: 'PreviewDeploy'
  displayName: 'Preview Deploy'
  variables:
  - group: build-vars
  - name: previewVersion #filled in get-version template
    value: 0.0.0.0
  - name: previewVersionName #filled in get-version template
    value: ''
  dependsOn: 'Build'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: preview
    strategy: 
        runOnce:
          deploy:
            steps:
            - checkout: none

            - download: current
              artifact: 'installer'

            - template: templates/get-version.yml
              parameters:
                versionFile: '$(Pipeline.Workspace)/installer/version.json'

            - task: AppCenterDistribute@3
              inputs:
                serverEndpoint: app-center
                appSlug: 'xarial/CAD-Toolset'
                appFile: '$(Pipeline.Workspace)/installer/preview/CADPlusToolset.msi'
                buildVersion: '$(previewVersion) ($(previewVersionName))'
                releaseNotesOption: 'input'
                releaseNotesInput: '-'
                isMandatory: true
                destinationType: 'groups'
                distributionGroupId: $(APPCENTER_GRP_PREVIEW)

- stage: 'ProductionDeploy'
  displayName: 'Production Deploy'
  variables:
  - group: build-vars
  - name: prodVersion #filled in get-version template
    value: 0.0.0.0
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: production
    strategy: 
      runOnce:
        deploy:
          steps:
          - checkout: none

          - download: current
            artifact: 'installer'

          - template: templates/get-version.yml
            parameters:
              versionFile: '$(Pipeline.Workspace)/installer/version.json'

          - task: AppCenterDistribute@3
            inputs:
              serverEndpoint: app-center
              appSlug: 'xarial/CAD-Toolset'
              appFile: '$(Pipeline.Workspace)/installer/prod/CADPlusToolset.msi'
              buildVersion: '$(prodVersion)'
              releaseNotesOption: 'input'
              releaseNotesInput: '-'
              isMandatory: true
              destinationType: 'groups'
              distributionGroupId: $(APPCENTER_GRP_PROD)