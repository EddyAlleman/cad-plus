<metro:MetroWindow x:Class="Xarial.CadPlus.XBatch.Base.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cmnctrls="clr-namespace:Xarial.CadPlus.Common.Controls;assembly=Xarial.CadPlus.Common"
        xmlns:dz="http://schemas.devzest.com/presentation/docking"
        xmlns:conv="clr-namespace:Xarial.CadPlus.XBatch.Base.Converters"
        xmlns:xconv="clr-namespace:Xarial.XToolkit.Wpf.Converters;assembly=Xarial.XToolkit.Wpf"
        xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:win="clr-namespace:System.Windows;assembly=PresentationCore"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        Title="xBatch" Icon="Resources/xbatch.png"
        mc:Ignorable="d" WindowState="Maximized" TitleCharacterCasing="Normal" WindowTransitionsEnabled="False"
        Height="450" Width="800">
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Generic.xaml" />
                <ResourceDictionary>
                    <conv:LogOutputToTextConverter x:Key="logOutConv"/>
                    <conv:CommandEnabledConverter x:Key="cmdEnabledConv"/>
                    <conv:SelectedVersionConverter x:Key="selVersConv"/>
                    <conv:DocumentTitleConverter x:Key="docTitleConv"/>
                    <xconv:ObjectIsNotNullUniversalConverter x:Key="objIsNotNullToVisConv" 
                                                             TrueValue="{x:Static win:Visibility.Visible}"
                                                             FalseValue="{x:Static win:Visibility.Collapsed}"/>
                    <xconv:ObjectIsNotNullUniversalConverter x:Key="objIsNotNullConv"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>
    <metro:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Margin="10 0 10 0" FontSize="18" FontWeight="Bold"
                       Text="{TemplateBinding Content}"/>
                <TextBlock VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource docTitleConv}">
                            <Binding Path="DataContext.Document.Name" RelativeSource="{RelativeSource AncestorType={x:Type metro:MetroWindow}}"/>
                            <Binding Path="DataContext.Document.IsDirty" RelativeSource="{RelativeSource AncestorType={x:Type metro:MetroWindow}}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </DataTemplate>
    </metro:MetroWindow.TitleTemplate>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <fluent:Ribbon Grid.Row="0">
            <fluent:Ribbon.Menu>
                <fluent:Backstage>
                    <fluent:BackstageTabControl>
                        <fluent:Button Header="New" Icon="/XBatch.Base;component/Resources/new.png" 
                                       LargeIcon="/XBatch.Base;component/Resources/new.png"
                                       Command="{Binding Path=NewDocumentCommand}" />
                        <fluent:Button Header="Open" Icon="/XBatch.Base;component/Resources/open.png" 
                                       LargeIcon="/XBatch.Base;component/Resources/open.png" 
                                       Command="{Binding Path=OpenDocumentCommand}" />
                        <fluent:SeparatorTabItem/>
                        <fluent:Button Header="Save" Icon="/XBatch.Base;component/Resources/save.png" 
                                       LargeIcon="/XBatch.Base;component/Resources/save.png" 
                                       Command="{Binding Path=Document.SaveDocumentCommand}" 
                                       IsEnabled="{Binding Path=Command, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource cmdEnabledConv}}"/>
                        <fluent:Button Header="Save As..." 
                                       Command="{Binding Path=Document.SaveAsDocumentCommand}" 
                                       IsEnabled="{Binding Path=Command, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource cmdEnabledConv}}"/>
                        <fluent:SeparatorTabItem/>
                        <fluent:Button Header="Close" Command="{Binding Path=CloseDocumentCommand}" />
                    </fluent:BackstageTabControl>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>
            <fluent:RibbonTabItem Header="Input" DataContext="{Binding Path=Document}" IsEnabled="{Binding Converter={StaticResource objIsNotNullConv}}">
                <fluent:RibbonGroupBox Header="Files">
                    <fluent:Button Header="Add Files..." 
                                   Command="{Binding Path=AddFilesCommand, ElementName=lstInputs}"
                                   Icon="/XBatch.Base;component/Resources/add-file.png"
                                   LargeIcon="/XBatch.Base;component/Resources/add-file.png" />
                    <fluent:Button Header="Add Folders..."
                                   Command="{Binding Path=AddFoldersCommand, ElementName=lstInputs}"
                                   Icon="/XBatch.Base;component/Resources/add-folder.png"
                                   LargeIcon="/XBatch.Base;component/Resources/add-folder.png" />
                    <fluent:Button Header="Remove Files And Folders"
                                   Command="{Binding Path=DeleteSelectedCommand, ElementName=lstInputs}"
                                   Icon="/XBatch.Base;component/Resources/remove-file-folder.png"
                                   LargeIcon="/XBatch.Base;component/Resources/remove-file-folder.png" />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Macros">
                    <fluent:Button Header="Add Macros..." Size="Large"
                                   Command="{Binding Path=AddFilesCommand, ElementName=lstMacros}"
                                   Icon="/XBatch.Base;component/Resources/add-macro.png"
                                   LargeIcon="/XBatch.Base;component/Resources/add-macro.png" />
                    <fluent:Button Header="Remove Macros"
                                   Command="{Binding Path=DeleteSelectedCommand, ElementName=lstMacros}"
                                   Icon="/XBatch.Base;component/Resources/remove-macro.png"
                                   LargeIcon="/XBatch.Base;component/Resources/remove-macro.png" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="Settings" DataContext="{Binding Path=Document.Settings}" IsEnabled="{Binding Converter={StaticResource objIsNotNullConv}}">
                <fluent:RibbonGroupBox Header="Startup Options">
                    <fluent:DropDownButton LargeIcon="/XBatch.Base;component/Resources/app-version.png" Header="{Binding Path=Version.DisplayName}" 
                                           ItemsSource="{Binding Path=InstalledVersions}">
                        <fluent:DropDownButton.ItemTemplate>
                            <DataTemplate>
                                <fluent:RadioButton Header="{Binding Path=DisplayName}" 
                                                    Command="{Binding Path=DataContext.SelectVersionCommand, RelativeSource={RelativeSource AncestorType={x:Type fluent:DropDownButton}}}" 
                                                    CommandParameter="{Binding}">
                                    <fluent:RadioButton.IsChecked>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource selVersConv}">
                                            <Binding/>
                                            <Binding Path="DataContext.Version" RelativeSource="{RelativeSource AncestorType={x:Type fluent:DropDownButton}}"/>
                                        </MultiBinding>
                                    </fluent:RadioButton.IsChecked>
                                </fluent:RadioButton>
                            </DataTemplate>
                        </fluent:DropDownButton.ItemTemplate>
                    </fluent:DropDownButton>
                    <fluent:ToggleButton Size="Large" Icon="/XBatch.Base;component/Resources/safe-mode.png" 
                                         IsChecked="{Binding Path=StartupOptionSafe}"
                                         LargeIcon="/XBatch.Base;component/Resources/safe-mode.png" Header="Safe">
                        <fluent:ToggleButton.ToolTip>
                            <fluent:ScreenTip Title="Safe Mode"
                                          Text="Opens application skipping all the settings"
                                          Image="/XBatch.Base;component/Resources/safe-mode.png"
                                          Width="190"
                                          IsRibbonAligned="True" />
                        </fluent:ToggleButton.ToolTip>
                    </fluent:ToggleButton>
                    <fluent:ToggleButton Size="Large" Icon="/XBatch.Base;component/Resources/background-mode.png" 
                                         LargeIcon="/XBatch.Base;component/Resources/background-mode.png" Header="Background"
                                         IsChecked="{Binding Path=StartupOptionBackground}"/>
                    <fluent:ToggleButton Size="Large" Icon="/XBatch.Base;component/Resources/no-popup-mode.png" 
                                         LargeIcon="/XBatch.Base;component/Resources/no-popup-mode.png" Header="Silent"
                                         IsChecked="{Binding Path=StartupOptionSilent}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="File Open Options">
                    <fluent:ToggleButton Icon="/XBatch.Base;component/Resources/silent-mode.png" 
                                         LargeIcon="/XBatch.Base;component/Resources/silent-mode.png" Header="Silent"
                                         IsChecked="{Binding Path=OpenFileOptionSilent}"/>
                    <fluent:ToggleButton Icon="/XBatch.Base;component/Resources/read-only-mode.png" 
                                         LargeIcon="/XBatch.Base;component/Resources/read-only-mode.png" Header="Read Only"
                                         IsChecked="{Binding Path=OpenFileOptionReadOnly}"/>
                    <fluent:ToggleButton Icon="/XBatch.Base;component/Resources/rapid-mode.png"
                                         LargeIcon="/XBatch.Base;component/Resources/rapid-mode.png" Header="Rapid"
                                         IsChecked="{Binding Path=OpenFileOptionRapid}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Execution">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <metro:ToggleSwitch Grid.Column="0" VerticalAlignment="Center" 
                                            OnContent="Timeout On" 
                                            OffContent="Timeout Off"
                                            IsOn="{Binding Path=IsTimeoutEnabled}"/>
                        <fluent:Spinner Value="{Binding Path=Timeout}" Grid.Column="1"
                                        Minimum="0" Maximum="3600"
                                        Format="0" Width="150"
                                        Header="" IsEnabled="{Binding Path=IsTimeoutEnabled}"/>
                    </Grid>
                    <metro:ToggleSwitch Grid.Column="0" VerticalAlignment="Center" OnContent="Continue on error" OffContent="Stop on error" IsOn="{Binding Path=ContinueOnError}"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="Job" DataContext="{Binding Path=Document}" IsEnabled="{Binding Converter={StaticResource objIsNotNullConv}}">
                <fluent:RibbonGroupBox Header="Execution">
                    <fluent:Button Header="Run Job"
                                   Icon="/XBatch.Base;component/Resources/run-job.png"
                                   LargeIcon="/XBatch.Base;component/Resources/run-job.png" 
                                   Command="{Binding Path=RunJobCommand}" 
                                   IsEnabled="{Binding Path=Command, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource cmdEnabledConv}}"/>
                    <fluent:Button Header="Cancel Job"
                                   Icon="/XBatch.Base;component/Resources/cancel-job.png"
                                   LargeIcon="/XBatch.Base;component/Resources/cancel-job.png" 
                                   Command="{Binding Path=Results.Selected.CancelJobCommand}" 
                                   IsEnabled="{Binding Path=Command, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource cmdEnabledConv}}"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>
        <dz:DockControl Grid.Row="1" DataContext="{Binding Path=Document}" Visibility="{Binding Converter={StaticResource objIsNotNullToVisConv}}">
            <dz:DockControl.DockItems>
                <dz:DockItem TabText="Results" Title="Results" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Right, Source=0}">
                    <Grid DataContext="{Binding Path=Results}">
                        <ListBox Margin="5" ItemsSource="{Binding Path=Items}" SelectedItem="{Binding Path=Selected}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </dz:DockItem>
                <dz:DockItem TabText="Summary" Title="Summary" ShowAction="{dz:ShowAsSidePaneAction Side=Bottom, Size=*, IsSizeForTarget=True, Target=0, Source=1}">
                    <Grid Margin="5" DataContext="{Binding Path=Results.Selected.Summary}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ProgressBar Grid.Row="1" Height="20" Value="{Binding Path=Progress}" Minimum="0" Maximum="1"/>
                    </Grid>
                </dz:DockItem>
                <dz:DockItem TabText="Log" Title="Log" ShowAction="{dz:ShowAsTabbedAction Target=1, Source=2}">
                    <Grid DataContext="{Binding Path=Results.Selected.Log}">
                        <TextBox AcceptsReturn="True" AcceptsTab="True"
                                 IsReadOnly="True" Margin="5"
                                 VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                            <TextBox.Text>
                                <MultiBinding Converter="{StaticResource logOutConv}" Mode="OneWay">
                                    <Binding Path="Output"/>
                                    <Binding Path="Output.Count"/>
                                </MultiBinding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                </dz:DockItem>
                <dz:DockItem TabText="Files And Folders" Title="Files And Folders" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Document, Source=3}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <cmnctrls:PathListBox x:Name="lstInputs" Filters="{Binding Path=InputFilesFilter}" 
                                              Grid.Row="0" PathsSource="{Binding Path=Input}"
                                              ShowAddFileButton="False" ShowAddFolderButton="False"/>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Filter:" Grid.Column="0" Margin="2" VerticalAlignment="Center" />
                            <TextBox Text="{Binding Path=Filter, UpdateSourceTrigger=PropertyChanged}" 
                                     Grid.Column="1" Margin="2" Width="200" HorizontalAlignment="Left"
                                     metro:TextBoxHelper.Watermark="Input filters for files in folders" />
                        </Grid>
                    </Grid>
                </dz:DockItem>
                <dz:DockItem TabText="Macros" Title="Macros" ShowAction="{dz:ShowAsSidePaneAction Side=Bottom, Size=*, IsSizeForTarget=True, Target=3, Source=4 }">
                    <Grid>
                        <cmnctrls:PathListBox x:Name="lstMacros" Filters="{Binding Path=MacroFilesFilter}" 
                                                  Grid.Row="1" ShowAddFolderButton="False" ShowAddFileButton="False" AllowDropFolders="False"
                                                  PathsSource="{Binding Path=Macros}"/>
                    </Grid>
                </dz:DockItem>
            </dz:DockControl.DockItems>
        </dz:DockControl>
    </Grid>
</metro:MetroWindow>
